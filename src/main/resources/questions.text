Question No 1:
Problem: Find Pivot Index

You are given an array of integers nums.
Your task is to return the pivot index of this array.
The pivot index is defined as the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the right of the index.
If the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left.
If the index is on the right edge of the array, then the right sum is 0 because there are no elements to the right.
If multiple pivot indices exist, return the leftmost one.
If no such index exists, return -1.

Example 1:
Input: nums = [1,7,3,6,5,6]
Output: 3
Explanation:
Left sum = 1 + 7 + 3 = 11
Right sum = 5 + 6 = 11

Example 2:
Input: nums = [1,2,3]
Output: -1
Explanation:
No index satisfies the condition.

Example 3:
Input: nums = [2,1,-1]
Output: 0
Explanation:
Left sum = 0
Right sum = 1 + (-1) = 0

Constraints
1 <= nums.length <= 10^4
-1000 <= nums[i] <= 1000



Question No 2:
Problem: Remove Duplicates from Sorted Array

Description:
Given a sorted array of integers nums, remove the duplicates in-place such that each element appears only once. Return the new length of the array after removing duplicates.
You must do this without using extra space for another array â€” modify the input array in-place with O(1) extra memory.
The order of elements should be maintained. You do not need to consider elements beyond the returned length.

Example 1:
Input: nums = [1,1,2]
Output: 2, nums = [1,2,_]   // _ means any value beyond new length
Explanation: The first two elements after removing duplicates are 1 and 2.

Example 2:
Input: nums = [0,0,1,1,1,2,2,3,3,4]
Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]